generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}

model User {
  id           String        @id @unique
  email        String
  firstName    String
  lastName     String
  profileImage String?
  Favorite     Favorite[]
  Home         Home[]
  Reservation  Reservation[]
}

// model Home {
//   id               String        @id @default(uuid())
//   title            String?
//   description      String?
//   guests           String?
//   bedrooms         String?
//   bathrooms        String?
//   country          String?
//   photo            String?
//   price            Int?
//   categoryName     String?
//   addedCategory    Boolean       @default(false)
//   addedDescription Boolean       @default(false)
//   addedLoaction    Boolean       @default(false)
//   createdAT        DateTime      @default(now())
//   userId           String?
//   Favorite         Favorite[]
//   User             User?         @relation(fields: [userId], references: [id])
//   Reservation      Reservation[]
// }

model Home {
  id               String        @id @default(uuid())
  title            String?
  description      String?
  guests           String?
  bedrooms         String?
  bathrooms        String?
  country          String?
  photo            String?
  price            Int?
  categoryName     String?
  addedCategory    Boolean       @default(false)
  addedDescription Boolean       @default(false)
  addedLocation    Boolean       @default(false)  // Fixed typo
  createdAT        DateTime      @default(now())
  userId           String        // Made non-nullable
  Favorite         Favorite[]
  User             User          @relation(fields: [userId], references: [id])
  Reservation      Reservation[]
}


model Favorite {
  id       String   @id @default(uuid())
  userId   String?
  homeId   String?
  createAt DateTime @default(now())
  Home     Home?    @relation(fields: [homeId], references: [id])
  User     User?    @relation(fields: [userId], references: [id])
}

model Reservation {
  id        String   @id @default(uuid())
  startDate DateTime
  endDate   DateTime
  createdAt DateTime @default(now())
  userId    String?
  homeId    String?
  Home      Home?    @relation(fields: [homeId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
}
